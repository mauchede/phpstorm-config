#!/bin/sh
set -ex

# Check environment

fail() {
    echo 1>&2 "$1"
    echo 1>&2 "Usage: $(basename "$0") [install|uninstall]"
    exit 1
}

if [ "$#" -lt 1 ] ; then
    fail "Invalid number of arguments."
fi

if [ "$(uname)" != "Linux" ] ; then
    fail "Impossible to prepare another operating system than Linux."
fi

# Run installer

case "$1" in
    install )
        PHPSTORM_CONFIG_FOLDER_PREVIOUS="$(ls --all "${HOME}" | grep ".PhpStorm" | tail --lines 1)"
        PHPSTORM_CONFIG_FOLDER_NEW="$(cat /snap/phpstorm/current/bin/phpstorm.sh | grep --only-matching --perl-regexp "(\.PhpStorm[0-9]{4}\.[0-9]+)" | head --lines 1)"

        if [ -n "${PHPSTORM_CONFIG_FOLDER_PREVIOUS}" ] ; then
            if [ ${PHPSTORM_CONFIG_FOLDER_PREVIOUS} != "${PHPSTORM_CONFIG_FOLDER_NEW}" ] ; then
                mv "${HOME}/${PHPSTORM_CONFIG_FOLDER_PREVIOUS}" "${HOME}/${PHPSTORM_CONFIG_FOLDER_NEW}"
            fi
            git -C "${HOME}/${PHPSTORM_CONFIG_FOLDER_NEW}/config" fetch origin
            git -C "${HOME}/${PHPSTORM_CONFIG_FOLDER_NEW}/config" checkout --force origin/master

            rm --force --recursive $(ls --all "${HOME}" | grep ".PhpStorm" | grep --invert-match "${PHPSTORM_CONFIG_FOLDER_NEW}")
        else
            mkdir "${HOME}/${PHPSTORM_CONFIG_FOLDER_NEW}"
            git clone "https://github.com/mauchede/phpstorm-config" "${HOME}/${PHPSTORM_CONFIG_FOLDER_NEW}/config"
        fi
    ;;

    uninstall )
        rm --force --recursive $(ls --all "${HOME}" | grep ".PhpStorm")
    ;;

    * )
        fail "Argument \"$1\" is invalid."
esac
